template<>
Class *Reflection::getStruct<$type$>() {
	static Class result;
	result.name = "$type$";
	result.fields = new Field[$field_count$];
	result.field_count = $field_count$;
	result.size = sizeof($type$);

	$fields:{field| 
result.fields[$i0$].type = getType<$field.type_id$>();
result.fields[$i0$].name = "$field.name$";
$if(field.is_static)$
result.fields[$i0$].static_address = (void *)&$type$::$field.name$;
result.fields[$i0$].offset = 0;
$else$
result.fields[$i0$].offset = offsetof($type$, $field.name$);
result.fields[$i0$].static_address = nullptr;
$endif$

	}$

	return &result;
}

template<>
const Type *Reflection::getType<$type$>() { 
	return (const Type *)getStruct<$type$>();
}
